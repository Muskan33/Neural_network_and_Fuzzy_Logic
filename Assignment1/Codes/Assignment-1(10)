{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Assignment-1(10)","provenance":[{"file_id":"1cXUMzDZokg7IMGl5w4Ro4nyPNE5ACXZ1","timestamp":1634059055583}],"authorship_tag":"ABX9TyMqEMWSYTMsjqhJKgVUf9VE"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"4yesiq03-xrC","executionInfo":{"status":"ok","timestamp":1634059191110,"user_tz":-330,"elapsed":648,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"execution_count":109,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gAtJPfty_B0W","executionInfo":{"status":"ok","timestamp":1634059191110,"user_tz":-330,"elapsed":33,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}},"outputId":"e12c6816-ca37-47b9-d5b0-3c19f9f63b4e"},"source":["data = pd.read_excel (r'/content/data_q6_q7 (6).xlsx')\n","N, M = data.shape\n","N, M"],"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(209, 8)"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","metadata":{"id":"tujZMQtJ_ZSa","executionInfo":{"status":"ok","timestamp":1634059191111,"user_tz":-330,"elapsed":24,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}}},"source":["data = np.array(data)\n","np.random.shuffle(data)\n","# ones = np.ones((N, 1), dtype='float32')\n","# X = np.concatenate([ones, data[:, :M-1]], axis=1)\n","X = data[:, :M-1]\n","Y = data[:, M-1]"],"execution_count":111,"outputs":[]},{"cell_type":"code","metadata":{"id":"5IZsaRzH_i2K","executionInfo":{"status":"ok","timestamp":1634059191112,"user_tz":-330,"elapsed":23,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}}},"source":["tr_ratio = 0.7\n","ntr = int (N*tr_ratio)\n","nts = N - ntr\n","x_train = X[:ntr, :]\n","x_test = X[ntr:, :]\n","y_train = Y[:ntr]\n","y_test = Y[ntr:]\n"],"execution_count":112,"outputs":[]},{"cell_type":"code","metadata":{"id":"Wx3r9IVA_tfz","executionInfo":{"status":"ok","timestamp":1634059191113,"user_tz":-330,"elapsed":22,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}}},"source":["x_a = []\n","x_b = []\n","x_c = []\n","\n","n, m = x_train.shape\n","for i in range(n):\n","  if (y_train[i] == 1):\n","    x_a.append(x_train[i])\n","  elif (y_train[i] == 2):\n","    x_b.append(x_train[i])\n","  elif (y_train[i] == 3):\n","    x_c.append(x_train[i])\n","\n","x_a = np.array(x_a)\n","x_b = np.array(x_b)\n","x_c = np.array(x_c)\n","\n","\n"],"execution_count":113,"outputs":[]},{"cell_type":"code","metadata":{"id":"9CUZjERs_03y","executionInfo":{"status":"ok","timestamp":1634059191113,"user_tz":-330,"elapsed":20,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}}},"source":["x_a_mn = np.mean(x_a, axis=0).reshape(1, x_a.shape[1])\n","x_b_mn = np.mean(x_b, axis=0).reshape(1, x_b.shape[1])\n","x_c_mn = np.mean(x_c, axis=0).reshape(1, x_c.shape[1])\n","x_a_cov = np.cov(x_a.T)\n","x_b_cov = np.cov(x_b.T)\n","x_c_cov = np.cov(x_c.T)"],"execution_count":114,"outputs":[]},{"cell_type":"code","metadata":{"id":"rIK_8W8d_5BD","executionInfo":{"status":"ok","timestamp":1634059191114,"user_tz":-330,"elapsed":19,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}}},"source":["n_a = x_a.shape[0]\n","n_b = x_b.shape[0]\n","n_c = x_c.shape[0]"],"execution_count":115,"outputs":[]},{"cell_type":"code","metadata":{"id":"pnn1IuMO_7nQ","executionInfo":{"status":"ok","timestamp":1634059191116,"user_tz":-330,"elapsed":19,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}}},"source":["\n","def get_probs(x, n_a, n_b, n_c, x_a_mu, x_b_mu, x_c_mu, x_a_cov, x_b_cov, x_c_cov):\n","  \n","  probs = []\n","\n","  inverse = np.linalg.inv(x_a_cov)\n","  p = x - x_a_mu\n","  numer1 = np.dot(np.dot(p, inverse), p.T)\n","  numer1 = np.exp(-0.5 * numer1)\n","  denom1 = ((2 * np.pi)**(n_a/2)) * ((np.linalg.det(x_a_cov))**(0.5)) \n","  prob1 = numer1 / denom1\n","  probs.append(prob1)\n","\n","  inverse = np.linalg.inv(x_b_cov)\n","  p = x - x_b_mu\n","  numer2 = np.dot(np.dot(p, inverse), p.T)\n","  numer2 = np.exp(-0.5 * numer2)\n","  denom2 = ((2 * np.pi)**(n_b/2)) * ((np.linalg.det(x_b_cov))**(0.5)) \n","  prob2 = numer2 / denom2\n","  probs.append(prob2)\n","\n","  inverse = np.linalg.inv(x_c_cov)\n","  p = x - x_c_mu\n","  numer3 = np.dot(np.dot(p, inverse), p.T)\n","  numer3 = np.exp(-0.5 * numer3)\n","  denom3 = ((2 * np.pi)**(n_c/2)) * ((np.linalg.det(x_c_cov))**(0.5)) \n","  prob3 = numer3 / denom3\n","  probs.append(prob3)\n","\n","  return probs"],"execution_count":116,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"68IpKErLACn_","executionInfo":{"status":"ok","timestamp":1634059191116,"user_tz":-330,"elapsed":18,"user":{"displayName":"MUSKAN KHANNA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14503783361471552212"}},"outputId":"1197aabc-18bd-4b8a-f104-07805cec0ea5"},"source":["final = []\n","n_correct=[]\n","n, m = x_test.shape\n","for i in range(n):\n","  probs = get_probs(x_test[i, :], n_a, n_b, n_c, x_a_mn, x_b_mn, x_c_mn, x_a_cov, x_b_cov, x_c_cov)\n","  mxval = max(probs)\n","  mxindex = probs.index(mxval) + 1\n","  final.append(mxindex)\n","  n_correct.append(final[i]==y_test[i])\n","\n","final = np.array(final, dtype='float32')\n","n_correct=np.array(n_correct)\n","TP1=0\n","TP2=0\n","TP3=0\n","FN1=0\n","FN2=0\n","FN3=0\n","for i in range(y_test.shape[0]):\n","    if (y_test[i]==1 and final[i]==1):\n","      TP1=TP1+1\n","    elif (y_test[i]==1 and final[i]!=1):\n","      FN1=FN1+1\n","    elif (y_test[i]==2 and final[i]==2):\n","      TP2=TP2+1\n","    elif (y_test[i]==2 and final[i]!=2):\n","      FN2=FN2+1\n","    elif (y_test[i]==3 and final[i]==3):\n","      TP3=TP3+1\n","    else:\n","      FN3=FN3+1\n","acc=100*(TP1+TP2+TP3)/len(y_test)\n","acc1=100*TP1/(TP1+FN1)\n","acc2=100*TP2/(TP2+FN2)\n","acc3=100*TP3/(TP3+FN3)\n","print(\"overall accuracy:\" + str(acc1))\n","print(\"accuracy for 1:\" + str(acc1))\n","print(\"accuracy for 2:\" + str(acc2))\n","print(\"accuracy for 3:\" + str(acc3))\n","print()"],"execution_count":117,"outputs":[{"output_type":"stream","name":"stdout","text":["overall accuracy:91.30434782608695\n","accuracy for 1:91.30434782608695\n","accuracy for 2:100.0\n","accuracy for 3:94.73684210526316\n","\n"]}]}]}